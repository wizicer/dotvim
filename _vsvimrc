" # Introduction
" This vimrc can be translate to markdown file by removing all leading double
" qoutes, here is the example:
"
" 1. put script in `script.in` file
"
" ```
" ggVGy
" :e! %:h/vimrc.md
" ggVGx"0pggVx:%s/^" \=//g
" :wq!
" ```
" 2. start vim by following command `vim -s script.in -n vimrc`
" 3. `Optional` generate html from markdown via pandoc
" 
" # Configurations
"
" following keys should be mapping in VS options: `A` `B` `D` `F` `N` `O` `P` `Q` `R` `U` `V` `X`
"
" ## Basic Initialization

    "set langmenu=en_US
    "let $LANG = 'en_US'
    source $VIMRUNTIME/menu.vim
    " source $VIMRUNTIME/delmenu.vim
    set encoding=utf-8
    "set langmenu=zh_CN.UTF-8
    "language message zh_CN.UTF-8
    set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
    set nocompatible
    set magic
    set ru "标尺信息
    set ai
    set sw=4
    set ts=4
    set number
    set dir=%temp%
    filetype plugin on
    if has("autocmd")
        filetype plugin indent on
    endif
    syntax on
    set dy=lastline "显示最多行，不用@@
    "以上是缩进相关
    set backspace=indent,eol,start
    colo desert " other my fav color is evening/slate
    sy on
    set go=r " no menu and toolbar
    set nobackup
    set hlsearch
    set showmatch
    set ignorecase
    set tabstop=2
    set expandtab
    set guifont=Consolas:h10:cANSI
    set laststatus=2

    """ Moving Around/Editing
    set cursorline              " have a line indicate the cursor location
    set ruler                   " show the cursor position all the time
    set nostartofline           " Avoid moving cursor to BOL when jumping around
    set virtualedit=block       " Let cursor move past the last char in <C-v> mode
    set scrolloff=3             " Keep 3 context lines above and below the cursor
    set backspace=2             " Allow backspacing over autoindent, EOL, and BOL
    set showmatch               " Briefly jump to a paren once it's balanced
    set nowrap                  " don't wrap text
    set linebreak               " don't wrap textin the middle of a word
    set autoindent              " always set autoindenting on
    set smartindent             " use smart indent if there is no indent file
    set tabstop=4               " <tab> inserts 4 spaces 
    set shiftwidth=4            " but an indent level is 2 spaces wide.
    set softtabstop=4           " <BS> over an autoindent deletes both spaces.
    set expandtab               " Use spaces, not tabs, for autoindent/tab key.
    set shiftround              " rounds indent to a multiple of shiftwidth
    set matchpairs+=<:>         " show matching <> (html mainly) as well
    set foldmethod=indent       " allow us to fold on indents
    set foldlevel=5             " don't fold by default

    """ Searching and Patterns
    set ignorecase              " Default to using case insensitive searches,
    set smartcase               " unless uppercase letters are used in the regex.
    set smarttab                " Handle tabs more intelligently 
    set hlsearch                " Highlight searches by default.
    set incsearch               " Incrementally search while typing a /regex

    """ make sure undo history can be saved after switched files
    set hidden

    let mapleader=","

" ## Other

    " Use CTRL-S for saving, also in Insert mode
    noremap <C-S> :update<CR>
    vnoremap <C-S> <C-C>:update<CR>
    inoremap <C-S> <C-O>:update<CR>

" ## Split window

" `Ctrl-jklm` to change to that split

    map <c-j> <c-w>j
    map <c-k> <c-w>k
    map <c-l> <c-w>l
    map <c-h> <c-w>h

" and lets make these all work in insert mode too ( <C-O> makes next cmd
"  happen as if in command mode )

    imap <C-W> <C-O><C-W>

    " Mappings to move line

    nnoremap <A-j> :vsc Edit.MoveSelectedLinesDown<CR>
    nnoremap <A-k> :vsc Edit.MoveSelectedLinesUp<CR>
    inoremap <A-j> :vsc Edit.MoveSelectedLinesDown<CR>
    inoremap <A-k> :vsc Edit.MoveSelectedLinesUp<CR>
    vnoremap <A-j> :vsc Edit.MoveSelectedLinesDown<CR>
    vnoremap <A-k> :vsc Edit.MoveSelectedLinesUp<CR>


    vnoremap gc :vsc Edit.CommentSelection<CR>
    vnoremap gu :vsc Edit.UncommentSelection<CR>
    nnoremap gc :vsc Edit.CommentSelection<CR>
    nnoremap gu :vsc Edit.UncommentSelection<CR>

    nnoremap <C-o> :vsc View.NavigateBackward<CR>
    nnoremap <C-i> :vsc View.NavigateForward<CR>

" ## Other

" map p to multiple time paste without change current clipboard item
    xnoremap p pgvy


